pipeline {
    agent any
    environment {
        REGISTRY = 'localhost:5000'
        IMAGE_NAME = 'spring-boot-app:latest'
        // Optional: Use Docker registry if needed dfdfdf
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }
        stage('Docker Push to Minikube') {
            steps {
                // Ensure Minikube Docker environment is active
                sh 'eval $(minikube docker-env)'
                sh 'docker tag $IMAGE_NAME $REGISTRY/$IMAGE_NAME'
                sh 'docker push $REGISTRY/$IMAGE_NAME'
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -f deployment.yaml'
                sh 'kubectl apply -f service.yaml'
            }
        }
    }
}
